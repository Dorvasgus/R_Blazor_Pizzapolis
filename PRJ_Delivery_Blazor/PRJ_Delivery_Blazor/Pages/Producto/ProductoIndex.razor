@page "/Clientes"
@attribute [Authorize(Roles = "ADM, CAJ")]
@inject IRepositorio repositorioHTTP
@inject NavigationManager navigationManager
@inject IMostrarMensajes mostrarMensaje

<br />
<a type="button" href="" class="btn btn-success">New User</a>
<br />
<table class="table table-dark table-hover">

    <thead>
        <tr>
            <th scope="col">#</th>
            <th scope="col">IdCliente</th>
            <th scope="col">RazonSocial</th>
            <th scope="col">UserName</th>
            <th scope="col">Password</th>
            <th scope="col">Localidad</th>
            <th scope="col">Acciones</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th scope="row">1</th>
            <td>Mark</td>
            <td>Otto</td>
            <td>mdo</td>
            <td>Otto</td>
            <td>Otto</td>
            <td>Otto</td>
            <td>
                <a type="button" href="" class="btn btn-outline-primary">Edit</a>
                <a type="button" href="" class="btn btn-outline-danger">Delete</a>
            </td>
        </tr>
        <tr>
            <th scope="row">1</th>
            <td>Mark</td>
            <td>Otto</td>
            <td>mdo</td>
            <td>Otto</td>
            <td>Otto</td>
            <td>Otto</td>
            <td>
                <a type="button" href="" class="btn btn-outline-primary">Edit</a>
                <a type="button" href="" class="btn btn-outline-danger">Delete</a>
            </td>
        </tr>
        <tr>
            <th scope="row">1</th>
            <td>Mark</td>
            <td>Otto</td>
            <td>mdo</td>
            <td>Otto</td>
            <td>Otto</td>
            <td>Otto</td>
            <td>
                <a type="button" href="" class="btn btn-outline-primary">Edit</a>
                <a type="button" href="" class="btn btn-outline-danger">Delete</a>
            </td>
        </tr>
    </tbody>
</table>
<Paginacion PaginaActual="paginaActual" PaginaSeleccionada="paginaSeleccionada"
            PaginasTotales="paginasTotales"></Paginacion>

@code {
    [Parameter] public string modo { get; set; } = "crear";
    private ProductoActualizarDTO productoInsertar = new ProductoActualizarDTO();

    private async Task guardar()
    {


        await Task.Delay(2000);

    }

    private int paginaActual = 1;
    private int paginasTotales;

    List<ClienteDTO>? clientes;
    ResponseListDTO<ClienteDTO>? responseListDTO;

    private async Task paginaSeleccionada(int pagina)
    {
        paginaActual = pagina;
        await TraerDatos(pagina);
    }


    private async Task TraerDatos(int pagina = 1)
    {
        try
        {
            //https://localhost:7024/api/Cliente/paginacion?Pagina=1&CantidadRegistroPorPagina=2
            //cliente-usuario-persona(localidad)-funcionario-pedido
            var responseWrapper = await repositorioHTTP.Get<ResponseListDTO<ClienteDTO>>($"Cliente/paginacion?Pagina={pagina}&CantidadRegistroPorPagina=2");
            if (!responseWrapper.Error)
            {
                responseListDTO = responseWrapper.Response;

                clientes = responseListDTO.valores;
                paginasTotales = responseListDTO.cantidad;
            }
        }
        catch (Exception ex)
        {
            var mess = ex.Message;
        }
    }

    private void Crear()
    {
        navigationManager.NavigateTo("/Cliente/Crear");
    }
    private void Modificar(int id)
    {
        navigationManager.NavigateTo($"/Cliente/Editar/{id}");
    }
    private async Task Eliminar(int id)
    {
        var pregunta = await mostrarMensaje.Confirmacion("Eliminar", "Esta seguro de eliminar el registro", "question");
        if (pregunta)
        {
            var response = await repositorioHTTP.Delete<object>($"Cliente/{id}");
            if (!response.Error)
            {
                await mostrarMensaje.MostrarMensajeExitoso("Registro eliminado");
                await TraerDatos();
            }
            else
            {
                await mostrarMensaje.MostrarMensajeError("Error al eliminar el registro");
            }
        }
    }

}